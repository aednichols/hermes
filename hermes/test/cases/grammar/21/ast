(Grammar:
  body=[
    (Lexer:
      atoms=[
        (Regex:
          regex=<grammar.hgr:3:5 regex "cidccysn">,
          options=None,
          onmatch=[
            (Null:

            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:4:5 regex "cid4Jw==">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:4:14 terminal "eA==">,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<grammar.hgr:5:5 regex "cid5Jw==">,
          options=None,
          onmatch=[
            (Terminal:
              name=<grammar.hgr:5:14 terminal "eQ==">,
              group=None
            )
          ]
        )
      ]
    ),
    (Parser:
      rules=[
        (Rule:
          nonterminal=<grammar.hgr:8:6 nonterminal "cw==">,
          production=[
            (Production:
              morphemes=[
                (Macro:
                  name=<grammar.hgr:8:10 identifier "bGlzdA==">,
                  parameters=[
                    <grammar.hgr:8:16 nonterminal "dA==">
                  ]
                )
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:9:6 nonterminal "cw==">,
          production=[
            (Production:
              morphemes=[
                <grammar.hgr:9:11 terminal "X2VtcHR5">
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:10:6 nonterminal "dA==">,
          production=[
            (Production:
              morphemes=[
                <grammar.hgr:10:11 terminal "eA==">
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<grammar.hgr:11:6 nonterminal "dA==">,
          production=[
            (Production:
              morphemes=[
                <grammar.hgr:11:11 terminal "eQ==">
              ],
              ast=None
            )
          ]
        )
      ]
    )
  ]
)