(Grammar:
  body=[
    (Lexer:
      language=<identifier (line 2 col 9) `python`>,
      atoms=[
        (Regex:
          regex=<regex (line 3 col 5) `r'\s+'`>,
          options=None,
          onmatch=[
            (Null:

            )
          ]
        ),
        (Regex:
          regex=<regex (line 4 col 5) `r'{'`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 4 col 14) `lbrace`>,
              group=None
            ),
            <stack_push (line 4 col 22) `letters`>
          ]
        ),
        (Regex:
          regex=<regex (line 5 col 5) `r'\('`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 5 col 15) `lparen`>,
              group=None
            ),
            <stack_push (line 5 col 23) `numbers`>
          ]
        ),
        (Mode:
          name=<identifier (line 6 col 10) `letters`>,
          atoms=[
            (Regex:
              regex=<regex (line 7 col 7) `r'\s+'`>,
              options=None,
              onmatch=[
                (Null:

                )
              ]
            ),
            (Regex:
              regex=<regex (line 8 col 7) `r'[a-z]'`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 8 col 20) `letter`>,
                  group=None
                )
              ]
            ),
            (Regex:
              regex=<regex (line 9 col 7) `r'{'`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 9 col 16) `lbrace`>,
                  group=None
                ),
                <stack_push (line 9 col 24) `letters`>
              ]
            ),
            (Regex:
              regex=<regex (line 10 col 7) `r'\('`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 10 col 17) `lparen`>,
                  group=None
                ),
                <stack_push (line 10 col 25) `numbers`>
              ]
            ),
            (Regex:
              regex=<regex (line 11 col 7) `r'}'`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 11 col 16) `rbrace`>,
                  group=None
                ),
                <action (line 11 col 24) `pop`>
              ]
            )
          ]
        ),
        (Mode:
          name=<identifier (line 13 col 10) `numbers`>,
          atoms=[
            (Regex:
              regex=<regex (line 14 col 7) `r'\s+'`>,
              options=None,
              onmatch=[
                (Null:

                )
              ]
            ),
            (Regex:
              regex=<regex (line 15 col 7) `r'[0-9]'`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 15 col 20) `number`>,
                  group=None
                )
              ]
            ),
            (Regex:
              regex=<regex (line 16 col 7) `r'{'`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 16 col 16) `lbrace`>,
                  group=None
                ),
                <stack_push (line 16 col 24) `letters`>
              ]
            ),
            (Regex:
              regex=<regex (line 17 col 7) `r'\('`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 17 col 17) `lparen`>,
                  group=None
                ),
                <stack_push (line 17 col 25) `numbers`>
              ]
            ),
            (Regex:
              regex=<regex (line 18 col 7) `r'\)'`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 18 col 17) `rparen`>,
                  group=None
                ),
                <action (line 18 col 25) `pop`>
              ]
            )
          ]
        )
      ],
      code=None
    ),
    (Lexer:
      language=<identifier (line 21 col 9) `c`>,
      atoms=[
        (Regex:
          regex=<regex (line 22 col 5) `"\\s+"`>,
          options=None,
          onmatch=[
            (Null:

            )
          ]
        ),
        (Regex:
          regex=<regex (line 23 col 5) `"\\{"`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 23 col 15) `lbrace`>,
              group=None
            ),
            <stack_push (line 23 col 23) `letters`>
          ]
        ),
        (Regex:
          regex=<regex (line 24 col 5) `"\\("`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 24 col 15) `lparen`>,
              group=None
            ),
            <stack_push (line 24 col 23) `numbers`>
          ]
        ),
        (Mode:
          name=<identifier (line 25 col 10) `letters`>,
          atoms=[
            (Regex:
              regex=<regex (line 26 col 7) `"\\s+"`>,
              options=None,
              onmatch=[
                (Null:

                )
              ]
            ),
            (Regex:
              regex=<regex (line 27 col 7) `"[a-z]"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 27 col 19) `letter`>,
                  group=None
                )
              ]
            ),
            (Regex:
              regex=<regex (line 28 col 7) `"\\{"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 28 col 17) `lbrace`>,
                  group=None
                ),
                <stack_push (line 28 col 25) `letters`>
              ]
            ),
            (Regex:
              regex=<regex (line 29 col 7) `"\\("`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 29 col 17) `lparen`>,
                  group=None
                ),
                <stack_push (line 29 col 25) `numbers`>
              ]
            ),
            (Regex:
              regex=<regex (line 30 col 7) `"\\}"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 30 col 17) `rbrace`>,
                  group=None
                ),
                <action (line 30 col 25) `pop`>
              ]
            )
          ]
        ),
        (Mode:
          name=<identifier (line 32 col 10) `numbers`>,
          atoms=[
            (Regex:
              regex=<regex (line 33 col 7) `"\\s+"`>,
              options=None,
              onmatch=[
                (Null:

                )
              ]
            ),
            (Regex:
              regex=<regex (line 34 col 7) `"[0-9]"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 34 col 19) `number`>,
                  group=None
                )
              ]
            ),
            (Regex:
              regex=<regex (line 35 col 7) `"\\{"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 35 col 17) `lbrace`>,
                  group=None
                ),
                <stack_push (line 35 col 25) `letters`>
              ]
            ),
            (Regex:
              regex=<regex (line 36 col 7) `"\\("`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 36 col 17) `lparen`>,
                  group=None
                ),
                <stack_push (line 36 col 25) `numbers`>
              ]
            ),
            (Regex:
              regex=<regex (line 37 col 7) `"\\)"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 37 col 17) `rparen`>,
                  group=None
                ),
                <action (line 37 col 25) `pop`>
              ]
            )
          ]
        )
      ],
      code=None
    ),
    (Lexer:
      language=<identifier (line 40 col 9) `java`>,
      atoms=[
        (Regex:
          regex=<regex (line 41 col 5) `"\\s+"`>,
          options=None,
          onmatch=[
            (Null:

            )
          ]
        ),
        (Regex:
          regex=<regex (line 42 col 5) `"\\{"`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 42 col 15) `lbrace`>,
              group=None
            ),
            <stack_push (line 42 col 23) `letters`>
          ]
        ),
        (Regex:
          regex=<regex (line 43 col 5) `"\\("`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 43 col 15) `lparen`>,
              group=None
            ),
            <stack_push (line 43 col 23) `numbers`>
          ]
        ),
        (Mode:
          name=<identifier (line 44 col 10) `letters`>,
          atoms=[
            (Regex:
              regex=<regex (line 45 col 7) `"\\s+"`>,
              options=None,
              onmatch=[
                (Null:

                )
              ]
            ),
            (Regex:
              regex=<regex (line 46 col 7) `"[a-z]"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 46 col 19) `letter`>,
                  group=None
                )
              ]
            ),
            (Regex:
              regex=<regex (line 47 col 7) `"\\{"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 47 col 17) `lbrace`>,
                  group=None
                ),
                <stack_push (line 47 col 25) `letters`>
              ]
            ),
            (Regex:
              regex=<regex (line 48 col 7) `"\\("`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 48 col 17) `lparen`>,
                  group=None
                ),
                <stack_push (line 48 col 25) `numbers`>
              ]
            ),
            (Regex:
              regex=<regex (line 49 col 7) `"\\}"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 49 col 17) `rbrace`>,
                  group=None
                ),
                <action (line 49 col 25) `pop`>
              ]
            )
          ]
        ),
        (Mode:
          name=<identifier (line 51 col 10) `numbers`>,
          atoms=[
            (Regex:
              regex=<regex (line 52 col 7) `"\\s+"`>,
              options=None,
              onmatch=[
                (Null:

                )
              ]
            ),
            (Regex:
              regex=<regex (line 53 col 7) `"[0-9]"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 53 col 19) `number`>,
                  group=None
                )
              ]
            ),
            (Regex:
              regex=<regex (line 54 col 7) `"\\{"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 54 col 17) `lbrace`>,
                  group=None
                ),
                <stack_push (line 54 col 25) `letters`>
              ]
            ),
            (Regex:
              regex=<regex (line 55 col 7) `"\\("`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 55 col 17) `lparen`>,
                  group=None
                ),
                <stack_push (line 55 col 25) `numbers`>
              ]
            ),
            (Regex:
              regex=<regex (line 56 col 7) `"\\)"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 56 col 17) `rparen`>,
                  group=None
                ),
                <action (line 56 col 25) `pop`>
              ]
            )
          ]
        )
      ],
      code=None
    ),
    (Lexer:
      language=<identifier (line 59 col 9) `javascript`>,
      atoms=[
        (Regex:
          regex=<regex (line 60 col 5) `"\\s+"`>,
          options=None,
          onmatch=[
            (Null:

            )
          ]
        ),
        (Regex:
          regex=<regex (line 61 col 5) `"\\{"`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 61 col 15) `lbrace`>,
              group=None
            ),
            <stack_push (line 61 col 23) `letters`>
          ]
        ),
        (Regex:
          regex=<regex (line 62 col 5) `"\\("`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 62 col 15) `lparen`>,
              group=None
            ),
            <stack_push (line 62 col 23) `numbers`>
          ]
        ),
        (Mode:
          name=<identifier (line 63 col 10) `letters`>,
          atoms=[
            (Regex:
              regex=<regex (line 64 col 7) `"\\s+"`>,
              options=None,
              onmatch=[
                (Null:

                )
              ]
            ),
            (Regex:
              regex=<regex (line 65 col 7) `"[a-z]"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 65 col 19) `letter`>,
                  group=None
                )
              ]
            ),
            (Regex:
              regex=<regex (line 66 col 7) `"\\{"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 66 col 17) `lbrace`>,
                  group=None
                ),
                <stack_push (line 66 col 25) `letters`>
              ]
            ),
            (Regex:
              regex=<regex (line 67 col 7) `"\\("`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 67 col 17) `lparen`>,
                  group=None
                ),
                <stack_push (line 67 col 25) `numbers`>
              ]
            ),
            (Regex:
              regex=<regex (line 68 col 7) `"\\}"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 68 col 17) `rbrace`>,
                  group=None
                ),
                <action (line 68 col 25) `pop`>
              ]
            )
          ]
        ),
        (Mode:
          name=<identifier (line 70 col 10) `numbers`>,
          atoms=[
            (Regex:
              regex=<regex (line 71 col 7) `"\\s+"`>,
              options=None,
              onmatch=[
                (Null:

                )
              ]
            ),
            (Regex:
              regex=<regex (line 72 col 7) `"[0-9]"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 72 col 19) `number`>,
                  group=None
                )
              ]
            ),
            (Regex:
              regex=<regex (line 73 col 7) `"\\{"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 73 col 17) `lbrace`>,
                  group=None
                ),
                <stack_push (line 73 col 25) `letters`>
              ]
            ),
            (Regex:
              regex=<regex (line 74 col 7) `"\\("`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 74 col 17) `lparen`>,
                  group=None
                ),
                <stack_push (line 74 col 25) `numbers`>
              ]
            ),
            (Regex:
              regex=<regex (line 75 col 7) `"\\)"`>,
              options=None,
              onmatch=[
                (Terminal:
                  name=<terminal (line 75 col 17) `rparen`>,
                  group=None
                ),
                <action (line 75 col 25) `pop`>
              ]
            )
          ]
        )
      ],
      code=None
    )
  ]
)