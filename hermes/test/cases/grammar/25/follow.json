$_gen0 -> :_eos, :rbrace
$_gen1 -> :rparen
$_gen2 -> :rbrace
$_gen3 -> :rbrace, :rparen, :rsquare
$class_atom -> :private, :public, :rbrace
$class_statement -> :private, :public, :rbrace
$classdef -> :_eos, :binary_number, :class, :decimal_number, :e, :for, :function, :hexadecimal_number, :identifier, :if, :import, :lbrace, :lparen, :lsquare, :octal_number, :rbrace, :subtract
$e -> :add, :comma, :divide, :multiply, :rbrace, :rparen, :rsquare, :semicolon, :subtract, :union
$for -> :_eos, :binary_number, :class, :decimal_number, :e, :for, :function, :hexadecimal_number, :identifier, :if, :import, :lbrace, :lparen, :lsquare, :octal_number, :rbrace, :subtract
$funcdef -> :_eos, :binary_number, :class, :decimal_number, :e, :for, :function, :hexadecimal_number, :identifier, :if, :import, :lbrace, :lparen, :lsquare, :octal_number, :private, :public, :rbrace, :subtract
$if -> :_eos, :binary_number, :class, :decimal_number, :e, :for, :function, :hexadecimal_number, :identifier, :if, :import, :lbrace, :lparen, :lsquare, :octal_number, :rbrace, :subtract
$if_body -> :_eos, :binary_number, :class, :decimal_number, :e, :for, :function, :hexadecimal_number, :identifier, :if, :import, :lbrace, :lparen, :lsquare, :octal_number, :rbrace, :subtract
$import -> :_eos, :binary_number, :class, :decimal_number, :e, :for, :function, :hexadecimal_number, :identifier, :if, :import, :lbrace, :lparen, :lsquare, :octal_number, :rbrace, :subtract
$param -> :comma, :rparen
$program -> :_eos
$simple_statement -> :_eos, :binary_number, :class, :decimal_number, :e, :for, :function, :hexadecimal_number, :identifier, :if, :import, :lbrace, :lparen, :lsquare, :octal_number, :rbrace, :subtract
$statement -> :_eos, :binary_number, :class, :decimal_number, :e, :for, :function, :hexadecimal_number, :identifier, :if, :import, :lbrace, :lparen, :lsquare, :octal_number, :rbrace, :subtract
$terminated__expr -> :_eos, :binary_number, :class, :decimal_number, :e, :for, :function, :hexadecimal_number, :identifier, :if, :import, :lbrace, :lparen, :lsquare, :octal_number, :rbrace, :subtract
$token -> 
