(Grammar:
  body=[
    (Lexer:
      atoms=[
        (Regex:
          regex=<regex (line 3 col 5) `cidccysn`>,
          options=None,
          onmatch=[
            (Null:

            )
          ]
        ),
        (Regex:
          regex=<regex (line 4 col 5) `cic7Jw==`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 4 col 14) `c2VtaQ==`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 5 col 5) `cidhJw==`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 5 col 14) `YQ==`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 6 col 5) `cidiJw==`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 6 col 14) `Yg==`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 7 col 5) `cicsJw==`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 7 col 14) `Y29tbWE=`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 8 col 5) `cidcKCc=`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 8 col 15) `bHBhcmVu`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 9 col 5) `cidcKSc=`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 9 col 15) `cnBhcmVu`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 10 col 5) `cidceyc=`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 10 col 15) `bGJyYWNl`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 11 col 5) `cidcfSc=`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 11 col 15) `cmJyYWNl`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 12 col 5) `cidcWyc=`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 12 col 15) `bHNxdWFyZQ==`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 13 col 5) `cidcXSc=`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 13 col 15) `cnNxdWFyZQ==`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 14 col 5) `cidbMC05XSsn`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 14 col 19) `bnVtYmVy`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 15 col 5) `cidbYS16QS1aXSsn`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 15 col 22) `aWRlbnRpZmllcg==`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 16 col 5) `cidcKyc=`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 16 col 15) `YWRk`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 17 col 5) `cictJw==`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 17 col 14) `c3VidHJhY3Q=`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 18 col 5) `cidcKic=`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 18 col 15) `bXVsdGlwbHk=`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 19 col 5) `cicvJw==`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 19 col 14) `ZGl2aWRl`>,
              group=None
            )
          ]
        )
      ]
    ),
    (Parser:
      rules=[
        (Rule:
          nonterminal=<nonterminal (line 22 col 6) `c3RhcnQ=`>,
          production=[
            (Production:
              morphemes=[
                (Macro:
                  name=<identifier (line 22 col 14) `bGlzdA==`>,
                  parameters=[
                    <nonterminal (line 22 col 20) `c3Vi`>,
                    <terminal (line 22 col 26) `Y29tbWE=`>
                  ]
                )
              ],
              ast=(AstTransformation:
                name=<identifier (line 22 col 36) `U3RhdGVtZW50cw==`>,
                parameters=[
                  (AstParameter:
                    name=<identifier (line 22 col 48) `bGlzdA==`>,
                    index=<nonterminal_reference (line 22 col 54) `MA==`>
                  )
                ]
              )
            )
          ]
        ),
        (Rule:
          nonterminal=<nonterminal (line 23 col 6) `c3Vi`>,
          production=[
            (Production:
              morphemes=[
                <nonterminal (line 23 col 13) `aXRlbQ==`>
              ],
              ast=(AstTransformation:
                name=<identifier (line 23 col 21) `SXRlbQ==`>,
                parameters=[
                  (AstParameter:
                    name=<identifier (line 23 col 27) `bmFtZQ==`>,
                    index=<nonterminal_reference (line 23 col 33) `MA==`>
                  )
                ]
              )
            )
          ]
        ),
        (Rule:
          nonterminal=<nonterminal (line 24 col 6) `c3Vi`>,
          production=[
            (Production:
              morphemes=[
                <nonterminal (line 24 col 13) `ZQ==`>
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<nonterminal (line 25 col 6) `aXRlbQ==`>,
          production=[
            (Production:
              morphemes=[
                <terminal (line 25 col 14) `Yg==`>
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<nonterminal (line 26 col 6) `aXRlbQ==`>,
          production=[
            (Production:
              morphemes=[
                <terminal (line 26 col 14) `YQ==`>
              ],
              ast=None
            )
          ]
        ),
        (Rule:
          nonterminal=<nonterminal (line 27 col 6) `ZQ==`>,
          production=(ExpressionParser:
            rules=[
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<asterisk (line 28 col 8) `Kg==`>,
                  associativity=<left (line 28 col 10) `bGVmdA==`>
                ),
                nonterminal=<nonterminal (line 28 col 17) `ZQ==`>,
                production=(InfixProduction:
                  morphemes=[
                    <nonterminal (line 28 col 17) `ZQ==`>,
                    <terminal (line 28 col 25) `YWRk`>,
                    <nonterminal (line 28 col 17) `ZQ==`>
                  ],
                  ast=(AstTransformation:
                    name=<identifier (line 28 col 35) `QWRk`>,
                    parameters=[
                      (AstParameter:
                        name=<identifier (line 28 col 40) `bA==`>,
                        index=<nonterminal_reference (line 28 col 43) `MA==`>
                      ),
                      (AstParameter:
                        name=<identifier (line 28 col 46) `cg==`>,
                        index=<nonterminal_reference (line 28 col 49) `Mg==`>
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<dash (line 29 col 8) `LQ==`>,
                  associativity=<left (line 29 col 10) `bGVmdA==`>
                ),
                nonterminal=<nonterminal (line 29 col 17) `ZQ==`>,
                production=(InfixProduction:
                  morphemes=[
                    <nonterminal (line 29 col 17) `ZQ==`>,
                    <terminal (line 29 col 25) `c3VidHJhY3Q=`>,
                    <nonterminal (line 29 col 17) `ZQ==`>
                  ],
                  ast=(AstTransformation:
                    name=<identifier (line 29 col 40) `U3Vi`>,
                    parameters=[
                      (AstParameter:
                        name=<identifier (line 29 col 45) `bA==`>,
                        index=<nonterminal_reference (line 29 col 48) `MA==`>
                      ),
                      (AstParameter:
                        name=<identifier (line 29 col 51) `cg==`>,
                        index=<nonterminal_reference (line 29 col 54) `Mg==`>
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<asterisk (line 30 col 8) `Kg==`>,
                  associativity=<left (line 30 col 10) `bGVmdA==`>
                ),
                nonterminal=<nonterminal (line 30 col 17) `ZQ==`>,
                production=(InfixProduction:
                  morphemes=[
                    <nonterminal (line 30 col 17) `ZQ==`>,
                    <terminal (line 30 col 25) `bXVsdGlwbHk=`>,
                    <nonterminal (line 30 col 17) `ZQ==`>
                  ],
                  ast=(AstTransformation:
                    name=<identifier (line 30 col 40) `TXVs`>,
                    parameters=[
                      (AstParameter:
                        name=<identifier (line 30 col 45) `bA==`>,
                        index=<nonterminal_reference (line 30 col 48) `MA==`>
                      ),
                      (AstParameter:
                        name=<identifier (line 30 col 51) `cg==`>,
                        index=<nonterminal_reference (line 30 col 54) `Mg==`>
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<dash (line 31 col 8) `LQ==`>,
                  associativity=<left (line 31 col 10) `bGVmdA==`>
                ),
                nonterminal=<nonterminal (line 31 col 17) `ZQ==`>,
                production=(InfixProduction:
                  morphemes=[
                    <nonterminal (line 31 col 17) `ZQ==`>,
                    <terminal (line 31 col 25) `ZGl2aWRl`>,
                    <nonterminal (line 31 col 17) `ZQ==`>
                  ],
                  ast=(AstTransformation:
                    name=<identifier (line 31 col 38) `RGl2`>,
                    parameters=[
                      (AstParameter:
                        name=<identifier (line 31 col 43) `bA==`>,
                        index=<nonterminal_reference (line 31 col 46) `MA==`>
                      ),
                      (AstParameter:
                        name=<identifier (line 31 col 49) `cg==`>,
                        index=<nonterminal_reference (line 31 col 52) `Mg==`>
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<asterisk (line 32 col 8) `Kg==`>,
                  associativity=<unary (line 32 col 10) `dW5hcnk=`>
                ),
                nonterminal=<nonterminal (line 32 col 18) `ZQ==`>,
                production=(PrefixProduction:
                  morphemes=[
                    <terminal (line 32 col 23) `c3VidHJhY3Q=`>,
                    <nonterminal (line 32 col 18) `ZQ==`>
                  ],
                  ast=(AstTransformation:
                    name=<identifier (line 32 col 38) `VU1pbnVz`>,
                    parameters=[
                      (AstParameter:
                        name=<identifier (line 32 col 46) `YXJn`>,
                        index=<nonterminal_reference (line 32 col 51) `MQ==`>
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=(Precedence:
                  marker=<asterisk (line 33 col 8) `Kg==`>,
                  associativity=<left (line 33 col 10) `bGVmdA==`>
                ),
                nonterminal=<nonterminal (line 33 col 17) `ZQ==`>,
                production=(MixfixProduction:
                  nud=[
                    <terminal (line 33 col 22) `aWRlbnRpZmllcg==`>
                  ],
                  nud_ast=None,
                  led=[
                    <terminal (line 33 col 38) `bHBhcmVu`>,
                    (Macro:
                      name=<identifier (line 33 col 45) `bGlzdA==`>,
                      parameters=[
                        <nonterminal (line 33 col 51) `ZQ==`>,
                        <terminal (line 33 col 55) `Y29tbWE=`>
                      ]
                    ),
                    <terminal (line 33 col 63) `cnBhcmVu`>
                  ],
                  ast=(AstTransformation:
                    name=<identifier (line 33 col 73) `RnVuY0NhbGw=`>,
                    parameters=[
                      (AstParameter:
                        name=<identifier (line 33 col 83) `bmFtZQ==`>,
                        index=<nonterminal_reference (line 33 col 89) `MA==`>
                      ),
                      (AstParameter:
                        name=<identifier (line 33 col 92) `cGFyYW1z`>,
                        index=<nonterminal_reference (line 33 col 100) `Mg==`>
                      )
                    ]
                  )
                )
              ),
              (ExpressionRule:
                precedence=None,
                nonterminal=<nonterminal (line 34 col 8) `ZQ==`>,
                production=(MixfixProduction:
                  nud=[
                    <terminal (line 34 col 13) `bHNxdWFyZQ==`>,
                    (Macro:
                      name=<identifier (line 34 col 21) `bGlzdA==`>,
                      parameters=[
                        <nonterminal (line 34 col 27) `ZQ==`>,
                        <terminal (line 34 col 31) `Y29tbWE=`>
                      ]
                    ),
                    <terminal (line 34 col 39) `cnNxdWFyZQ==`>
                  ],
                  nud_ast=(AstTransformation:
                    name=<identifier (line 34 col 50) `TGlzdERlY2w=`>,
                    parameters=[
                      (AstParameter:
                        name=<identifier (line 34 col 60) `aXRlbXM=`>,
                        index=<nonterminal_reference (line 34 col 67) `MQ==`>
                      )
                    ]
                  ),
                  led=None,
                  ast=None
                )
              ),
              (ExpressionRule:
                precedence=None,
                nonterminal=<nonterminal (line 35 col 8) `ZQ==`>,
                production=(MixfixProduction:
                  nud=[
                    <terminal (line 35 col 13) `bGJyYWNl`>,
                    (Macro:
                      name=<identifier (line 35 col 20) `bGlzdA==`>,
                      parameters=[
                        <nonterminal (line 35 col 26) `ZQ==`>,
                        <terminal (line 35 col 30) `Y29tbWE=`>
                      ]
                    ),
                    <terminal (line 35 col 38) `cmJyYWNl`>
                  ],
                  nud_ast=(AstTransformation:
                    name=<identifier (line 35 col 48) `U2V0RGVjbA==`>,
                    parameters=[
                      (AstParameter:
                        name=<identifier (line 35 col 57) `aXRlbXM=`>,
                        index=<nonterminal_reference (line 35 col 64) `MQ==`>
                      )
                    ]
                  ),
                  led=None,
                  ast=None
                )
              ),
              (ExpressionRule:
                precedence=None,
                nonterminal=<nonterminal (line 36 col 8) `ZQ==`>,
                production=(MixfixProduction:
                  nud=[
                    <terminal (line 36 col 13) `bHBhcmVu`>,
                    <nonterminal (line 36 col 21) `ZQ==`>,
                    <terminal (line 36 col 24) `cnBhcmVu`>
                  ],
                  nud_ast=<nonterminal_reference (line 36 col 35) `MQ==`>,
                  led=None,
                  ast=None
                )
              ),
              (ExpressionRule:
                precedence=None,
                nonterminal=<nonterminal (line 37 col 8) `ZQ==`>,
                production=(MixfixProduction:
                  nud=[
                    <terminal (line 37 col 13) `aWRlbnRpZmllcg==`>
                  ],
                  nud_ast=None,
                  led=None,
                  ast=None
                )
              ),
              (ExpressionRule:
                precedence=None,
                nonterminal=<nonterminal (line 38 col 8) `ZQ==`>,
                production=(MixfixProduction:
                  nud=[
                    <terminal (line 38 col 13) `bnVtYmVy`>
                  ],
                  nud_ast=None,
                  led=None,
                  ast=None
                )
              )
            ]
          )
        )
      ]
    )
  ]
)