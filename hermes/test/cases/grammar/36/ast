(Grammar:
  body=[
    (Lexer:
      atoms=[
        (Regex:
          regex=<regex (line 3 col 5) `cidccysn`>,
          options=None,
          onmatch=[
            (Null:

            )
          ]
        ),
        (Regex:
          regex=<regex (line 4 col 5) `cidpdGVtJw==`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 4 col 17) `aXRlbQ==`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 5 col 5) `cicsJw==`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 5 col 14) `Y29tbWE=`>,
              group=None
            )
          ]
        ),
        (Regex:
          regex=<regex (line 6 col 5) `ciduZXh0Jw==`>,
          options=None,
          onmatch=[
            (Terminal:
              name=<terminal (line 6 col 17) `bmV4dA==`>,
              group=None
            )
          ]
        )
      ]
    ),
    (Parser:
      rules=[
        (Rule:
          nonterminal=<nonterminal (line 9 col 6) `c3RhcnQ=`>,
          production=[
            (Production:
              morphemes=[
                (Macro:
                  name=<identifier (line 9 col 14) `dGxpc3Q=`>,
                  parameters=[
                    <terminal (line 9 col 21) `aXRlbQ==`>,
                    <terminal (line 9 col 28) `Y29tbWE=`>
                  ]
                ),
                <terminal (line 9 col 36) `bmV4dA==`>
              ],
              ast=(AstTransformation:
                name=<identifier (line 9 col 44) `VGhpbmc=`>,
                parameters=[
                  (AstParameter:
                    name=<identifier (line 9 col 50) `eA==`>,
                    index=<nonterminal_reference (line 9 col 53) `MA==`>
                  ),
                  (AstParameter:
                    name=<identifier (line 9 col 56) `eQ==`>,
                    index=<nonterminal_reference (line 9 col 59) `MQ==`>
                  )
                ]
              )
            )
          ]
        )
      ]
    )
  ]
)